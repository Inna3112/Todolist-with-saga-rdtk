[{"/Users/innafomichova/Documents/incubator/todolist-16/src/index.tsx":"1","/Users/innafomichova/Documents/incubator/todolist-16/src/features/TodolistsList/TodolistsList.tsx":"2","/Users/innafomichova/Documents/incubator/todolist-16/src/features/TodolistsList/Todolist/Task/Task.tsx":"3","/Users/innafomichova/Documents/incubator/todolist-16/src/features/TodolistsList/tasks-reducer.ts":"4","/Users/innafomichova/Documents/incubator/todolist-16/src/features/Login/Login.tsx":"5","/Users/innafomichova/Documents/incubator/todolist-16/src/app/App.tsx":"6","/Users/innafomichova/Documents/incubator/todolist-16/src/components/EditableSpan/EditableSpan.tsx":"7","/Users/innafomichova/Documents/incubator/todolist-16/src/api/todolists-api.ts":"8","/Users/innafomichova/Documents/incubator/todolist-16/src/features/TodolistsList/todolists-reducer.ts":"9","/Users/innafomichova/Documents/incubator/todolist-16/src/features/Login/auth-reducer.tsx":"10","/Users/innafomichova/Documents/incubator/todolist-16/src/app/app-reducer.ts":"11","/Users/innafomichova/Documents/incubator/todolist-16/src/app/store.ts":"12"},{"size":752,"mtime":1628782693806,"results":"13","hashOfConfig":"14"},{"size":4029,"mtime":1628792267679,"results":"15","hashOfConfig":"14"},{"size":1773,"mtime":1596295538000,"results":"16","hashOfConfig":"14"},{"size":5633,"mtime":1596722126000,"results":"17","hashOfConfig":"14"},{"size":3674,"mtime":1628790956865,"results":"18","hashOfConfig":"14"},{"size":1813,"mtime":1628784265885,"results":"19","hashOfConfig":"14"},{"size":952,"mtime":1594154724000,"results":"20","hashOfConfig":"14"},{"size":3087,"mtime":1628796007185,"results":"21","hashOfConfig":"14"},{"size":4585,"mtime":1597327450000,"results":"22","hashOfConfig":"14"},{"size":2059,"mtime":1628796007189,"results":"23","hashOfConfig":"14"},{"size":2314,"mtime":1628796007180,"results":"24","hashOfConfig":"14"},{"size":1645,"mtime":1634928879601,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"idige3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/innafomichova/Documents/incubator/todolist-16/src/index.tsx",[],["53","54"],"/Users/innafomichova/Documents/incubator/todolist-16/src/features/TodolistsList/TodolistsList.tsx",["55","56","57","58","59","60","61","62"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to={'/login'} />\r\n    }\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","/Users/innafomichova/Documents/incubator/todolist-16/src/features/TodolistsList/Todolist/Task/Task.tsx",["63","64","65"],"/Users/innafomichova/Documents/incubator/todolist-16/src/features/TodolistsList/tasks-reducer.ts",["66","67"],"/Users/innafomichova/Documents/incubator/todolist-16/src/features/Login/Login.tsx",["68"],"import React from 'react'\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\nimport {useFormik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginTC} from \"./auth-reducer\";\nimport {AppRootStateType} from \"../../app/store\";\nimport {Redirect} from \"react-router-dom\";\n\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\n\nexport const Login = () => {\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 4) {\n                errors.password = 'Must be 4 characters or more';\n            }\n            return errors;\n        },\n\n        onSubmit: values => {\n            dispatch(loginTC(values))\n            formik.resetForm()\n        },\n    })\n\n    if(isLoggedIn){\n        return <Redirect to={'/'} />\n    }\n\n    return <Grid container justify=\"center\">\n        <Grid item xs={4}>\n            <form onSubmit={formik.handleSubmit}>\n                <FormControl>\n                    <FormLabel>\n                        <p>To log in get registered\n                            <a href={'https://social-network.samuraijs.com/'}\n                               target={'_blank'}>here\n                            </a>\n                        </p>\n                        <p>or use common test account credentials:</p>\n                        <p>Email: free@samuraijs.com</p>\n                        <p>Password: free</p>\n                    </FormLabel>\n                    <FormGroup>\n                        <TextField\n                            label=\"Email\"\n                            margin=\"normal\"\n                            // name='email'\n                            // onBlur={formik.handleBlur}\n                            // onChange={formik.handleChange}\n                            // value={formik.values.email}\n                            {...formik.getFieldProps('email')}\n                        />\n                        {formik.touched.email && formik.errors.email && <div style={{'color': 'red'}}>{formik.errors.email}</div>}\n                        <TextField\n                            type=\"password\"\n                            label=\"Password\"\n                            margin=\"normal\"\n                            {...formik.getFieldProps('password')}\n                        />\n                        {formik.touched.password && formik.errors.password && <div style={{'color': 'red'}}>{formik.errors.password}</div>}\n                        <FormControlLabel\n                            label={'Remember me'}\n                            control={<Checkbox/>}\n                            checked={formik.values.rememberMe}\n                            {...formik.getFieldProps('rememberMe')}\n                        />\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\n                    </FormGroup>\n                </FormControl>\n            </form>\n        </Grid>\n    </Grid>\n}\n\n","/Users/innafomichova/Documents/incubator/todolist-16/src/app/App.tsx",[],"/Users/innafomichova/Documents/incubator/todolist-16/src/components/EditableSpan/EditableSpan.tsx",[],"/Users/innafomichova/Documents/incubator/todolist-16/src/api/todolists-api.ts",[],"/Users/innafomichova/Documents/incubator/todolist-16/src/features/TodolistsList/todolists-reducer.ts",["69"],"/Users/innafomichova/Documents/incubator/todolist-16/src/features/Login/auth-reducer.tsx",["70","71"],"/Users/innafomichova/Documents/incubator/todolist-16/src/app/app-reducer.ts",[],"/Users/innafomichova/Documents/incubator/todolist-16/src/app/store.ts",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":36,"column":8,"nodeType":"79","endLine":36,"endColumn":10,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":41,"column":8,"nodeType":"79","endLine":41,"endColumn":10,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"81","line":46,"column":8,"nodeType":"79","endLine":46,"endColumn":10,"suggestions":"83"},{"ruleId":"77","severity":1,"message":"81","line":51,"column":8,"nodeType":"79","endLine":51,"endColumn":10,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"81","line":56,"column":8,"nodeType":"79","endLine":56,"endColumn":10,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"81","line":61,"column":8,"nodeType":"79","endLine":61,"endColumn":10,"suggestions":"86"},{"ruleId":"77","severity":1,"message":"81","line":66,"column":8,"nodeType":"79","endLine":66,"endColumn":10,"suggestions":"87"},{"ruleId":"77","severity":1,"message":"81","line":71,"column":8,"nodeType":"79","endLine":71,"endColumn":10,"suggestions":"88"},{"ruleId":"77","severity":1,"message":"89","line":15,"column":97,"nodeType":"79","endLine":15,"endColumn":130,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"89","line":20,"column":8,"nodeType":"79","endLine":20,"endColumn":41,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"89","line":24,"column":8,"nodeType":"79","endLine":24,"endColumn":41,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":9,"nodeType":"95","messageId":"96","endLine":5,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":13,"column":94,"nodeType":"99","messageId":"100","endLine":13,"endColumn":96},{"ruleId":"101","severity":1,"message":"102","line":58,"column":32,"nodeType":"103","endLine":58,"endColumn":49},{"ruleId":"97","severity":1,"message":"98","line":10,"column":45,"nodeType":"99","messageId":"100","endLine":10,"endColumn":47},{"ruleId":"93","severity":1,"message":"104","line":4,"column":36,"nodeType":"95","messageId":"96","endLine":4,"endColumn":48},{"ruleId":"93","severity":1,"message":"105","line":6,"column":9,"nodeType":"95","messageId":"96","endLine":6,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":33,"column":1,"nodeType":"108","messageId":"109","endLine":35,"endColumn":2},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["112"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["113"],["114"],["115"],["116"],["117"],["118"],["119"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["120"],["121"],["122"],"@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'todolistsAPI' is defined but never used.","'addTaskAC' is defined but never used.","require-yield","This generator function does not have 'yield'.","FunctionDeclaration","missingYield","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"125","fix":"127"},{"desc":"125","fix":"128"},{"desc":"125","fix":"129"},{"desc":"125","fix":"130"},{"desc":"125","fix":"131"},{"desc":"125","fix":"132"},{"desc":"133","fix":"134"},{"desc":"133","fix":"135"},{"desc":"133","fix":"136"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"137","text":"138"},"Update the dependencies array to be: [dispatch]",{"range":"139","text":"140"},{"range":"141","text":"140"},{"range":"142","text":"140"},{"range":"143","text":"140"},{"range":"144","text":"140"},{"range":"145","text":"140"},{"range":"146","text":"140"},"Update the dependencies array to be: [props]",{"range":"147","text":"148"},{"range":"149","text":"148"},{"range":"150","text":"148"},[1326,1328],"[demo, dispatch, isLoggedIn]",[1497,1499],"[dispatch]",[1668,1670],[1873,1875],[2086,2088],[2287,2289],[2434,2436],[2613,2615],[765,798],"[props]",[1071,1104],[1261,1294]]